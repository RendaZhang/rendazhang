document.addEventListener("DOMContentLoaded", function() {
    const chatInput = document.getElementById("chat-input");
    const chatSendButton = document.getElementById("chat-send-button");
    const chatMessages = document.querySelector(".chat-messages");

    let isAnimating = false;
    let messageQueue = [];

    function appendMessage(sender, message) {
        let messageDiv;
    
        if (sender === "bot" && chatMessages.lastChild && chatMessages.lastChild.className === "bot") {
            messageDiv = chatMessages.lastChild;
            messageQueue.push(() => animateText(messageDiv, message));
        } else {
            messageDiv = document.createElement("div");
            messageDiv.className = sender;
            messageDiv.innerText = message;
            chatMessages.appendChild(messageDiv);
            chatMessages.scrollTop = chatMessages.scrollHeight;

            if (sender === "bot") {
                messageQueue.push(() => animateText(messageDiv, message));
            }
        }

        if (!isAnimating && messageQueue.length) {
            const nextMessage = messageQueue.shift();
            nextMessage();
        }
    }
    
    function animateText(element, text) {
        isAnimating = true;
        let currentText = element.innerText;
        let i = 0;
        const interval = setInterval(() => {
            if (i < text.length) {
                currentText += text[i];
                element.innerText = currentText;
                chatMessages.scrollTop = chatMessages.scrollHeight;
                i++;
            } else {
                clearInterval(interval);
                isAnimating = false;
                if (messageQueue.length) {
                    const nextMessage = messageQueue.shift();
                    nextMessage();
                }
            }
        }, 50); // Adjust the '50' for faster or slower typing speed
    }

    function processStream(reader, decoder) {
        let lastReceived = "";
        
        return reader.read().then(({ value, done }) => {
            if (done) return;
            const chunk = decoder.decode(value, { stream: true });
            lastReceived += chunk;

            let indexOfNewline;
            while ((indexOfNewline = lastReceived.indexOf("\n")) >= 0) {
                const messageJSON = lastReceived.substring(0, indexOfNewline);
                lastReceived = lastReceived.substring(indexOfNewline + 1);
                const message = JSON.parse(messageJSON).text;
                appendMessage("bot", message);
            }

            return processStream(reader, decoder);
        });
    }

    chatSendButton.addEventListener("click", function() {
        const userMessage = chatInput.value.trim();
        if (userMessage) {
            appendMessage("user", userMessage);
            chatInput.value = "";

            fetch("/cloudchat/chat", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({ message: userMessage })
            }).then(response => {
                const reader = response.body.getReader();
                const decoder = new TextDecoder();
                return processStream(reader, decoder);
            }).catch(error => {
                console.error("Error:", error);
                appendMessage("error", "An error occurred while processing your request.");
            });
        }
    });
});
